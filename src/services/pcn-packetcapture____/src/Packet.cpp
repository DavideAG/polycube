/**
* packetcapture API generated from packetcapture.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


// TODO: Modify these methods with your own implementation


#include "Packet.h"
#include "Packetcapture.h"


Packet::Packet(Packetcapture &parent, const PacketJsonObject &conf)
    : PacketBase(parent) {
  if (conf.capturelenIsSet()) {
    setCapturelen(conf.getCapturelen());
  }

  if (conf.packetlenIsSet()) {
    setPacketlen(conf.getPacketlen());
  }

  if (conf.timestampSecondsIsSet()) {
    setTimestampSeconds(conf.getTimestampSeconds());
  }

  if (conf.timestampMicrosecondsIsSet()) {
    setTimestampMicroseconds(conf.getTimestampMicroseconds());
  }

}

Packet::~Packet() {}

uint32_t Packet::getCapturelen() {
  throw std::runtime_error("Packet::getCapturelen: Method not implemented");
}

void Packet::setCapturelen(const uint32_t &value) {
  throw std::runtime_error("Packet::setCapturelen: Method not implemented");
}

uint32_t Packet::getPacketlen() {
  throw std::runtime_error("Packet::getPacketlen: Method not implemented");
}

void Packet::setPacketlen(const uint32_t &value) {
  throw std::runtime_error("Packet::setPacketlen: Method not implemented");
}

uint32_t Packet::getTimestampSeconds() {
  throw std::runtime_error("Packet::getTimestampSeconds: Method not implemented");
}

void Packet::setTimestampSeconds(const uint32_t &value) {
  throw std::runtime_error("Packet::setTimestampSeconds: Method not implemented");
}

uint32_t Packet::getTimestampMicroseconds() {
  throw std::runtime_error("Packet::getTimestampMicroseconds: Method not implemented");
}

void Packet::setTimestampMicroseconds(const uint32_t &value) {
  throw std::runtime_error("Packet::setTimestampMicroseconds: Method not implemented");
}


